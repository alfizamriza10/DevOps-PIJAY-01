name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: booking-hotel-system
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          --health-start-period=30s
          
    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo, dom, zip, gd
        coverage: none
        tools: composer:v2

    - uses: actions/checkout@v4

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install NPM Dependencies
      run: npm ci

    - name: Build Assets
      run: npm run build --production

    - name: Generate Application Key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Database Migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: booking-hotel-system
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan migrate --force

    - name: Run Tests
      run: php artisan test

    - name: Static Analysis (if applicable)
      run: vendor/bin/phpstan analyse --no-progress

  build-and-push:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          alfizamriza/devops-pijay-01:latest
          alfizamriza/devops-pijay-01:${{ github.sha }}
        cache-from: type=registry,ref=alfizamriza/devops-pijay-01:buildcache
        cache-to: type=registry,ref=alfizamriza/devops-pijay-01:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        # For example:
        # - SSH into your server
        # - Pull the latest Docker image
        # - Restart your containers
        # - Run any necessary migrations or post-deployment scripts
